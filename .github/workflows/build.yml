name: Build for commit

on:
  push:
  workflow_dispatch:

env:
  rust_toolchain: stable

permissions:
  contents: write

jobs:
  compile:
    strategy:
      fail-fast: true
      matrix:
        debug_enabled: [true, false]
    name: Compile
    runs-on: ubuntu-22.04
    env:
      MINIO_BUCKET: ${{ secrets.MINIO_BUCKET }}

    steps:
      - name: Setup | Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-06-28
          components: rustfmt, clippy
      - name: Install Rust for Xtensa
        uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          version: "latest"
          ldproxy: true
      - name: Setup | Std
        run: rustup component add rust-src --toolchain nightly-2025-06-28
      - uses: Swatinem/rust-cache@v2
      - name: Install Cargo-Binstall
        uses: cargo-bins/cargo-binstall@main
      - name: Install ESPflash
        run: cargo binstall espflash@=3.3.0 --no-confirm --force
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Install MinIO Client
        run: |
          curl https://dl.min.io/client/mc/release/linux-amd64/mc --create-dirs -o $HOME/minio-binaries/mc
          chmod +x $HOME/minio-binaries/mc
      - name: Set MinIO Client Up
        run: |
          $HOME/minio-binaries/mc alias set deploy $MINIO_ENDPOINT $MINIO_ACCESS_KEY $MINIO_SECRET_KEY
        env:
          MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}

      - name: Extract Data
        id: extract_version
        run: |
          # Remove the "v" prefix if present
          BASE_VERSION="${{ github.ref_name }}"
          VERSION=${BASE_VERSION#v}
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"
      - name: Prepare Debug Config # Remove CONFIG_LOG_DEFAULT_LEVEL_NONE=y from sdkconfig.defaults
        if: matrix.debug_enabled == true
        run: |
          if grep -q "CONFIG_LOG_DEFAULT_LEVEL_NONE=y" sdkconfig.defaults; then
            sed -i '/CONFIG_LOG_DEFAULT_LEVEL_NONE=y/d' sdkconfig.defaults
            echo "Removed CONFIG_LOG_DEFAULT_LEVEL_NONE=y from sdkconfig.defaults"
          fi

      - name: Build | Compile (production)
        run: |
          export VERSION=${BRANCH}@${SHA_SHORT}
          cargo build --release
        env:
          BRANCH: ${{ env.branch }}
          SHA_SHORT: $${{ env.sha_short }}

      - name: Merge Binary
        run: espflash save-image --merge --chip esp32c3 target/riscv32imc-esp-espidf/release/td-free-rs td-free.bin
      - name: Upload file
        run: |
          $HOME/minio-binaries/mc cp td-free.bin deploy/$MINIO_BUCKET/${{ env.branch }}/td-free-${{ env.sha_short }}_debug.bin
          $HOME/minio-binaries/mc cp td-free.bin deploy/$MINIO_BUCKET/${{ env.branch }}/td-free-latest_debug.bin
